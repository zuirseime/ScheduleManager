@using ScheduleManager.Data.Enums

@model LessonDuration

@{
    ViewData["Title"] = "Edit the Lesson Duration";
}

<div class="container">
    <form asp-action="" class="widget">
        <div class="h4 text-center mb-3">@ViewData["Title"]</div>

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <input asp-for="UserId" hidden />
        <input asp-for="Id" hidden />

        <div class="my-2">
            <label asp-for="LessonType"></label>
            <select class="form-control" name="LessonType" id="type" data-selected="@Model.LessonType">
                <option value="">Choose a type</option>
                @foreach (var type in Enum.GetValues(typeof(LessonType)))
                {
                    <option value="@type">@type</option>
                }
            </select>
            <span asp-validation-for="LessonType" class="text-danger"></span>
        </div>

        <div class="my-2">
            <label asp-for="Duration"></label>
            <input type="time" asp-for="Duration" class="form-control" />
            <span asp-validation-for="Duration" class="text-danger"></span>
        </div>

        <div class="justify-content-end d-flex gap-2 mt-3">
            <input type="submit" value="Delete" formaction="delete-lesson-duration" class="btn btn-danger px-3" />
            <input type="submit" value="Save" formaction="edit-lesson-duration" class="btn btn-primary px-5" />
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const typeSelect = document.getElementById("type");
        const selectedType = typeSelect.getAttribute("data-selected");
        if (selectedType) {
            typeSelect.value = selectedType;
        }
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}